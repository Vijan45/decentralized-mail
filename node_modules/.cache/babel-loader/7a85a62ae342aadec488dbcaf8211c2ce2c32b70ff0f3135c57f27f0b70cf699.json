{"ast":null,"code":"import React,{useEffect,useState}from'react';import{getWeb3,getContract}from'../utils/contract';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Inbox=()=>{const[messages,setMessages]=useState([]);const[status,setStatus]=useState('');useEffect(()=>{const fetchMessages=async()=>{const web3=await getWeb3();const accounts=await web3.eth.getAccounts();const contract=await getContract(web3);try{const userMessages=await contract.methods.getUserMessages(accounts[0]).call();setMessages(userMessages);setStatus('');}catch(error){console.error(error);setStatus('Failed to fetch messages');}};fetchMessages();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Inbox\"}),status&&/*#__PURE__*/_jsx(\"p\",{children:status}),/*#__PURE__*/_jsx(\"ul\",{children:messages.map((msg,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"From: \",msg.sender]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Message: \",msg.content]})]},index))})]});};export default Inbox;","map":{"version":3,"names":["React","useEffect","useState","getWeb3","getContract","jsx","_jsx","jsxs","_jsxs","Inbox","messages","setMessages","status","setStatus","fetchMessages","web3","accounts","eth","getAccounts","contract","userMessages","methods","getUserMessages","call","error","console","children","map","msg","index","sender","content"],"sources":["C:/Users/bhija/Downloads/decentralized-mail/src/components/Inbox.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getWeb3, getContract } from '../utils/contract';\r\n\r\nconst Inbox = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [status, setStatus] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      const web3 = await getWeb3();\r\n      const accounts = await web3.eth.getAccounts();\r\n      const contract = await getContract(web3);\r\n\r\n      try {\r\n        const userMessages = await contract.methods.getUserMessages(accounts[0]).call();\r\n        setMessages(userMessages);\r\n        setStatus('');\r\n      } catch (error) {\r\n        console.error(error);\r\n        setStatus('Failed to fetch messages');\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Inbox</h2>\r\n      {status && <p>{status}</p>}\r\n      <ul>\r\n        {messages.map((msg, index) => (\r\n          <li key={index}>\r\n            <p>From: {msg.sender}</p>\r\n            <p>Message: {msg.content}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inbox;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,OAAO,CAAEC,WAAW,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzD,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAClB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACU,MAAM,CAAEC,SAAS,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAExCD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAZ,OAAO,CAAC,CAAC,CAC5B,KAAM,CAAAa,QAAQ,CAAG,KAAM,CAAAD,IAAI,CAACE,GAAG,CAACC,WAAW,CAAC,CAAC,CAC7C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAf,WAAW,CAACW,IAAI,CAAC,CAExC,GAAI,CACF,KAAM,CAAAK,YAAY,CAAG,KAAM,CAAAD,QAAQ,CAACE,OAAO,CAACC,eAAe,CAACN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACO,IAAI,CAAC,CAAC,CAC/EZ,WAAW,CAACS,YAAY,CAAC,CACzBP,SAAS,CAAC,EAAE,CAAC,CACf,CAAE,MAAOW,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CACpBX,SAAS,CAAC,0BAA0B,CAAC,CACvC,CACF,CAAC,CAEDC,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEN,KAAA,QAAAkB,QAAA,eACEpB,IAAA,OAAAoB,QAAA,CAAI,OAAK,CAAI,CAAC,CACbd,MAAM,eAAIN,IAAA,MAAAoB,QAAA,CAAId,MAAM,CAAI,CAAC,cAC1BN,IAAA,OAAAoB,QAAA,CACGhB,QAAQ,CAACiB,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,gBACvBrB,KAAA,OAAAkB,QAAA,eACElB,KAAA,MAAAkB,QAAA,EAAG,QAAM,CAACE,GAAG,CAACE,MAAM,EAAI,CAAC,cACzBtB,KAAA,MAAAkB,QAAA,EAAG,WAAS,CAACE,GAAG,CAACG,OAAO,EAAI,CAAC,GAFtBF,KAGL,CACL,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAApB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}