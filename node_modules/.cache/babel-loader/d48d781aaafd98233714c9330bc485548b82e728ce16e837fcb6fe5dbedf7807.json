{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhija\\\\Downloads\\\\decentralized-mail\\\\src\\\\components\\\\SendMessage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getWeb3, getContract } from '../utils/contract';\nimport axios from 'axios';\nimport { TextField, Button, Typography, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendMessage = () => {\n  _s();\n  const [recipient, setRecipient] = useState('');\n  const [message, setMessage] = useState('');\n  const [image, setImage] = useState(null);\n  const [status, setStatus] = useState('');\n  const sendMessage = async () => {\n    const web3 = await getWeb3();\n    const accounts = await web3.eth.getAccounts();\n    const contract = await getContract(web3);\n    let imageHash = '';\n    if (image) {\n      const formData = new FormData();\n      formData.append('file', image);\n      const res = await axios.post('https://api.pinata.cloud/pinning/pinFileToIPFS', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          pinata_api_key: process.env.REACT_APP_PINATA_API_KEY,\n          pinata_secret_api_key: process.env.REACT_APP_PINATA_SECRET_API_KEY\n        }\n      });\n      imageHash = res.data.IpfsHash;\n    }\n    try {\n      await contract.methods.sendMessage(recipient, message, imageHash).send({\n        from: accounts[0]\n      });\n      setStatus('Message sent successfully!');\n    } catch (error) {\n      console.error(error);\n      setStatus('Failed to send message');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Recipient Address\",\n      fullWidth: true,\n      margin: \"normal\",\n      value: recipient,\n      onChange: e => setRecipient(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Message\",\n      fullWidth: true,\n      margin: \"normal\",\n      multiline: true,\n      rows: 4,\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      component: \"label\",\n      children: [\"Upload Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        hidden: true,\n        onChange: e => setImage(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), status && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"error\",\n      mt: 2,\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(SendMessage, \"zbILxQLDkmlpG68EEuaUFBIiM8c=\");\n_c = SendMessage;\nexport default SendMessage;\nvar _c;\n$RefreshReg$(_c, \"SendMessage\");","map":{"version":3,"names":["React","useState","getWeb3","getContract","axios","TextField","Button","Typography","Box","jsxDEV","_jsxDEV","SendMessage","_s","recipient","setRecipient","message","setMessage","image","setImage","status","setStatus","sendMessage","web3","accounts","eth","getAccounts","contract","imageHash","formData","FormData","append","res","post","headers","pinata_api_key","process","env","REACT_APP_PINATA_API_KEY","pinata_secret_api_key","REACT_APP_PINATA_SECRET_API_KEY","data","IpfsHash","methods","send","from","error","console","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","margin","value","onChange","e","target","multiline","rows","component","type","hidden","files","mt","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bhija/Downloads/decentralized-mail/src/components/SendMessage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { getWeb3, getContract } from '../utils/contract';\r\nimport axios from 'axios';\r\nimport { TextField, Button, Typography, Box } from '@mui/material';\r\n\r\nconst SendMessage = () => {\r\n    const [recipient, setRecipient] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [image, setImage] = useState(null);\r\n    const [status, setStatus] = useState('');\r\n\r\n    const sendMessage = async () => {\r\n        const web3 = await getWeb3();\r\n        const accounts = await web3.eth.getAccounts();\r\n        const contract = await getContract(web3);\r\n\r\n        let imageHash = '';\r\n        if (image) {\r\n            const formData = new FormData();\r\n            formData.append('file', image);\r\n\r\n            const res = await axios.post('https://api.pinata.cloud/pinning/pinFileToIPFS', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    pinata_api_key: process.env.REACT_APP_PINATA_API_KEY,\r\n                    pinata_secret_api_key: process.env.REACT_APP_PINATA_SECRET_API_KEY,\r\n                },\r\n            });\r\n\r\n            imageHash = res.data.IpfsHash;\r\n        }\r\n\r\n        try {\r\n            await contract.methods.sendMessage(recipient, message, imageHash).send({ from: accounts[0] });\r\n            setStatus('Message sent successfully!');\r\n        } catch (error) {\r\n            console.error(error);\r\n            setStatus('Failed to send message');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ p: 2 }}>\r\n            <Typography variant=\"h4\" gutterBottom>Send Message</Typography>\r\n            <TextField\r\n                label=\"Recipient Address\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                value={recipient}\r\n                onChange={(e) => setRecipient(e.target.value)}\r\n            />\r\n            <TextField\r\n                label=\"Message\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                multiline\r\n                rows={4}\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            <Button variant=\"contained\" component=\"label\">\r\n                Upload Image\r\n                <input\r\n                    type=\"file\"\r\n                    hidden\r\n                    onChange={(e) => setImage(e.target.files[0])}\r\n                />\r\n            </Button>\r\n            <Box mt={2}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={sendMessage}>Send</Button>\r\n            </Box>\r\n            {status && <Typography variant=\"body1\" color=\"error\" mt={2}>{status}</Typography>}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default SendMessage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}