{"ast":null,"code":"import Web3 from'web3';import mailContractData from'./DecentralizedMail.json';let web3Instance;let mailContract;const getWeb3=()=>{return new Promise((resolve,reject)=>{if(web3Instance)return resolve(web3Instance);if(window.ethereum){web3Instance=new Web3(window.ethereum);try{window.ethereum.enable().then(()=>{resolve(web3Instance);});}catch(error){reject(error);}}else if(window.web3){web3Instance=new Web3(window.web3.currentProvider);resolve(web3Instance);}else{const provider=new Web3.providers.HttpProvider('https://public-node.testnet.rsk.co');web3Instance=new Web3(provider);resolve(web3Instance);}});};const getContract=async web3=>{if(mailContract)return mailContract;const networkId='31';// RSK Testnet network ID\nconst deployedNetwork=mailContractData.networks[networkId];mailContract=new web3.eth.Contract(mailContractData.abi,deployedNetwork&&deployedNetwork.address);return mailContract;};export{getWeb3,getContract};","map":{"version":3,"names":["Web3","mailContractData","web3Instance","mailContract","getWeb3","Promise","resolve","reject","window","ethereum","enable","then","error","web3","currentProvider","provider","providers","HttpProvider","getContract","networkId","deployedNetwork","networks","eth","Contract","abi","address"],"sources":["C:/Users/bhija/Downloads/decentralized-mail/src/utils/contract.js"],"sourcesContent":["import Web3 from 'web3';\r\nimport mailContractData from './DecentralizedMail.json';\r\n\r\nlet web3Instance;\r\nlet mailContract;\r\n\r\nconst getWeb3 = () => {\r\n    return new Promise((resolve, reject) => {\r\n        if (web3Instance) return resolve(web3Instance);\r\n\r\n        if (window.ethereum) {\r\n            web3Instance = new Web3(window.ethereum);\r\n            try {\r\n                window.ethereum.enable().then(() => {\r\n                    resolve(web3Instance);\r\n                });\r\n            } catch (error) {\r\n                reject(error);\r\n            }\r\n        } else if (window.web3) {\r\n            web3Instance = new Web3(window.web3.currentProvider);\r\n            resolve(web3Instance);\r\n        } else {\r\n            const provider = new Web3.providers.HttpProvider('https://public-node.testnet.rsk.co');\r\n            web3Instance = new Web3(provider);\r\n            resolve(web3Instance);\r\n        }\r\n    });\r\n};\r\n\r\nconst getContract = async (web3) => {\r\n    if (mailContract) return mailContract;\r\n\r\n    const networkId = '31'; // RSK Testnet network ID\r\n    const deployedNetwork = mailContractData.networks[networkId];\r\n    mailContract = new web3.eth.Contract(\r\n        mailContractData.abi,\r\n        deployedNetwork && deployedNetwork.address\r\n    );\r\n\r\n    return mailContract;\r\n};\r\n\r\nexport { getWeb3, getContract };\r\n"],"mappings":"AAAA,MAAO,CAAAA,IAAI,KAAM,MAAM,CACvB,MAAO,CAAAC,gBAAgB,KAAM,0BAA0B,CAEvD,GAAI,CAAAC,YAAY,CAChB,GAAI,CAAAC,YAAY,CAEhB,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CAClB,MAAO,IAAI,CAAAC,OAAO,CAAC,CAACC,OAAO,CAAEC,MAAM,GAAK,CACpC,GAAIL,YAAY,CAAE,MAAO,CAAAI,OAAO,CAACJ,YAAY,CAAC,CAE9C,GAAIM,MAAM,CAACC,QAAQ,CAAE,CACjBP,YAAY,CAAG,GAAI,CAAAF,IAAI,CAACQ,MAAM,CAACC,QAAQ,CAAC,CACxC,GAAI,CACAD,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,IAAM,CAChCL,OAAO,CAACJ,YAAY,CAAC,CACzB,CAAC,CAAC,CACN,CAAE,MAAOU,KAAK,CAAE,CACZL,MAAM,CAACK,KAAK,CAAC,CACjB,CACJ,CAAC,IAAM,IAAIJ,MAAM,CAACK,IAAI,CAAE,CACpBX,YAAY,CAAG,GAAI,CAAAF,IAAI,CAACQ,MAAM,CAACK,IAAI,CAACC,eAAe,CAAC,CACpDR,OAAO,CAACJ,YAAY,CAAC,CACzB,CAAC,IAAM,CACH,KAAM,CAAAa,QAAQ,CAAG,GAAI,CAAAf,IAAI,CAACgB,SAAS,CAACC,YAAY,CAAC,oCAAoC,CAAC,CACtFf,YAAY,CAAG,GAAI,CAAAF,IAAI,CAACe,QAAQ,CAAC,CACjCT,OAAO,CAACJ,YAAY,CAAC,CACzB,CACJ,CAAC,CAAC,CACN,CAAC,CAED,KAAM,CAAAgB,WAAW,CAAG,KAAO,CAAAL,IAAI,EAAK,CAChC,GAAIV,YAAY,CAAE,MAAO,CAAAA,YAAY,CAErC,KAAM,CAAAgB,SAAS,CAAG,IAAI,CAAE;AACxB,KAAM,CAAAC,eAAe,CAAGnB,gBAAgB,CAACoB,QAAQ,CAACF,SAAS,CAAC,CAC5DhB,YAAY,CAAG,GAAI,CAAAU,IAAI,CAACS,GAAG,CAACC,QAAQ,CAChCtB,gBAAgB,CAACuB,GAAG,CACpBJ,eAAe,EAAIA,eAAe,CAACK,OACvC,CAAC,CAED,MAAO,CAAAtB,YAAY,CACvB,CAAC,CAED,OAASC,OAAO,CAAEc,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}