{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhija\\\\Downloads\\\\decentralized-mail\\\\src\\\\components\\\\Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { List, ListItem, ListItemText, Typography, Card, CardContent, Box, Avatar } from '@mui/material';\nimport { getWeb3, getContract } from '../utils/contract';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledListItem = styled(ListItem)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'flex-start',\n  padding: '10px',\n  borderBottom: '1px solid #e0e0e0'\n}));\n_c = StyledListItem;\nconst MessageContent = styled(Box)(({\n  theme\n}) => ({\n  marginTop: '10px'\n}));\n_c2 = MessageContent;\nconst MessageImage = styled('img')(({\n  theme\n}) => ({\n  maxWidth: '100%',\n  height: 'auto',\n  marginTop: '10px',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  '&:hover': {\n    opacity: 0.8\n  }\n}));\n_c3 = MessageImage;\nconst Inbox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [status, setStatus] = useState('');\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const contract = await getContract(web3);\n      try {\n        const userMessageIds = await contract.methods.getUserMessages(accounts[0]).call();\n        const userMessages = await Promise.all(userMessageIds.map(id => contract.methods.messages(id).call()));\n        setMessages(userMessages);\n        setStatus('');\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n        setStatus('Failed to fetch messages');\n      }\n    };\n    fetchMessages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"Card\",\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Inbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), status && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"error\",\n        gutterBottom: true,\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(StyledListItem, {\n          divider: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `From: ${msg.sender}`,\n            secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(MessageContent, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"body2\",\n                  color: \"textPrimary\",\n                  children: msg.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 41\n              }, this), msg.imageHash && /*#__PURE__*/_jsxDEV(MessageContent, {\n                children: /*#__PURE__*/_jsxDEV(MessageImage, {\n                  src: `https://gateway.pinata.cloud/ipfs/${msg.imageHash}`,\n                  alt: \"Attachment\",\n                  onClick: () => window.open(`https://gateway.pinata.cloud/ipfs/${msg.imageHash}`, '_blank')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Inbox, \"eVPFvhIuSHVZ6D0z29Vl0S1jFRs=\");\n_c4 = Inbox;\nexport default Inbox;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StyledListItem\");\n$RefreshReg$(_c2, \"MessageContent\");\n$RefreshReg$(_c3, \"MessageImage\");\n$RefreshReg$(_c4, \"Inbox\");","map":{"version":3,"names":["React","useEffect","useState","List","ListItem","ListItemText","Typography","Card","CardContent","Box","Avatar","getWeb3","getContract","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledListItem","theme","display","flexDirection","alignItems","padding","borderBottom","_c","MessageContent","marginTop","_c2","MessageImage","maxWidth","height","borderRadius","cursor","opacity","_c3","Inbox","_s","messages","setMessages","status","setStatus","fetchMessages","web3","accounts","eth","getAccounts","contract","userMessageIds","methods","getUserMessages","call","userMessages","Promise","all","map","id","error","console","className","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","msg","index","divider","primary","sender","secondary","component","content","imageHash","src","alt","onClick","window","open","_c4","$RefreshReg$"],"sources":["C:/Users/bhija/Downloads/decentralized-mail/src/components/Inbox.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { List, ListItem, ListItemText, Typography, Card, CardContent, Box, Avatar } from '@mui/material';\r\nimport { getWeb3, getContract } from '../utils/contract';\r\nimport { styled } from '@mui/system';\r\n\r\nconst StyledListItem = styled(ListItem)(({ theme }) => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    padding: '10px',\r\n    borderBottom: '1px solid #e0e0e0',\r\n}));\r\n\r\nconst MessageContent = styled(Box)(({ theme }) => ({\r\n    marginTop: '10px',\r\n}));\r\n\r\nconst MessageImage = styled('img')(({ theme }) => ({\r\n    maxWidth: '100%',\r\n    height: 'auto',\r\n    marginTop: '10px',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n        opacity: 0.8,\r\n    }\r\n}));\r\n\r\nconst Inbox = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [status, setStatus] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            const web3 = await getWeb3();\r\n            const accounts = await web3.eth.getAccounts();\r\n            const contract = await getContract(web3);\r\n\r\n            try {\r\n                const userMessageIds = await contract.methods.getUserMessages(accounts[0]).call();\r\n                const userMessages = await Promise.all(\r\n                    userMessageIds.map(id => contract.methods.messages(id).call())\r\n                );\r\n                setMessages(userMessages);\r\n                setStatus('');\r\n            } catch (error) {\r\n                console.error('Error fetching messages:', error);\r\n                setStatus('Failed to fetch messages');\r\n            }\r\n        };\r\n\r\n        fetchMessages();\r\n    }, []);\r\n\r\n    return (\r\n        <Card className=\"Card\">\r\n            <CardContent>\r\n                <Typography variant=\"h5\" gutterBottom>Inbox</Typography>\r\n                {status && (\r\n                    <Typography variant=\"body2\" color=\"error\" gutterBottom>\r\n                        {status}\r\n                    </Typography>\r\n                )}\r\n                <List>\r\n                    {messages.map((msg, index) => (\r\n                        <StyledListItem key={index} divider>\r\n                            <ListItemText\r\n                                primary={`From: ${msg.sender}`}\r\n                                secondary={\r\n                                    <>\r\n                                        <MessageContent>\r\n                                            <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\r\n                                                {msg.content}\r\n                                            </Typography>\r\n                                        </MessageContent>\r\n                                        {msg.imageHash && (\r\n                                            <MessageContent>\r\n                                                <MessageImage\r\n                                                    src={`https://gateway.pinata.cloud/ipfs/${msg.imageHash}`}\r\n                                                    alt=\"Attachment\"\r\n                                                    onClick={() => window.open(`https://gateway.pinata.cloud/ipfs/${msg.imageHash}`, '_blank')}\r\n                                                />\r\n                                            </MessageContent>\r\n                                        )}\r\n                                    </>\r\n                                }\r\n                            />\r\n                        </StyledListItem>\r\n                    ))}\r\n                </List>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Inbox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}