{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhija\\\\Downloads\\\\decentralized-mail\\\\src\\\\components\\\\SendMessage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Card, CardContent, Box } from '@mui/material';\nimport { getWeb3, getContract } from '../utils/contract';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendMessage = () => {\n  _s();\n  const [recipient, setRecipient] = useState('');\n  const [message, setMessage] = useState('');\n  const [image, setImage] = useState(null);\n  const [status, setStatus] = useState('');\n  const handleFileChange = e => {\n    setImage(e.target.files[0]);\n  };\n  const uploadImageToIPFS = async image => {\n    const formData = new FormData();\n    formData.append('file', image);\n    try {\n      const response = await axios.post('https://api.pinata.cloud/pinning/pinFileToIPFS', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'pinata_api_key': process.env.REACT_APP_PINATA_API_KEY,\n          'pinata_secret_api_key': process.env.REACT_APP_PINATA_SECRET_API_KEY\n        }\n      });\n      return response.data.IpfsHash;\n    } catch (error) {\n      console.error('Error uploading image to IPFS:', error);\n      throw error;\n    }\n  };\n  const sendMessage = async () => {\n    const web3 = await getWeb3();\n    const accounts = await web3.eth.getAccounts();\n    const contract = await getContract(web3);\n    let imageHash = '';\n    if (image) {\n      try {\n        imageHash = await uploadImageToIPFS(image);\n        console.log('Image uploaded to IPFS:', imageHash);\n      } catch (error) {\n        setStatus('Failed to upload image');\n        return;\n      }\n    }\n    try {\n      console.log('Sending message...');\n      await contract.methods.sendMessage(recipient, message, imageHash).send({\n        from: accounts[0]\n      });\n      setStatus('Message sent successfully!');\n      console.log('Message sent successfully!');\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setStatus('Failed to send message');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"Card\",\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Recipient Address\",\n        variant: \"outlined\",\n        fullWidth: true,\n        margin: \"normal\",\n        value: recipient,\n        onChange: e => setRecipient(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Message\",\n        variant: \"outlined\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        margin: \"normal\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: \"label\",\n          children: [\"Attach Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            hidden: true,\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        gutterBottom: true,\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(SendMessage, \"zbILxQLDkmlpG68EEuaUFBIiM8c=\");\n_c = SendMessage;\nexport default SendMessage;\nvar _c;\n$RefreshReg$(_c, \"SendMessage\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Card","CardContent","Box","getWeb3","getContract","axios","jsxDEV","_jsxDEV","SendMessage","_s","recipient","setRecipient","message","setMessage","image","setImage","status","setStatus","handleFileChange","e","target","files","uploadImageToIPFS","formData","FormData","append","response","post","headers","process","env","REACT_APP_PINATA_API_KEY","REACT_APP_PINATA_SECRET_API_KEY","data","IpfsHash","error","console","sendMessage","web3","accounts","eth","getAccounts","contract","imageHash","log","methods","send","from","className","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","margin","value","onChange","multiline","rows","mt","mb","component","type","hidden","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bhija/Downloads/decentralized-mail/src/components/SendMessage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Typography, Card, CardContent, Box } from '@mui/material';\r\nimport { getWeb3, getContract } from '../utils/contract';\r\nimport axios from 'axios';\r\n\r\nconst SendMessage = () => {\r\n    const [recipient, setRecipient] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [image, setImage] = useState(null);\r\n    const [status, setStatus] = useState('');\r\n\r\n    const handleFileChange = (e) => {\r\n        setImage(e.target.files[0]);\r\n    };\r\n\r\n    const uploadImageToIPFS = async (image) => {\r\n        const formData = new FormData();\r\n        formData.append('file', image);\r\n\r\n        try {\r\n            const response = await axios.post('https://api.pinata.cloud/pinning/pinFileToIPFS', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'pinata_api_key': process.env.REACT_APP_PINATA_API_KEY,\r\n                    'pinata_secret_api_key': process.env.REACT_APP_PINATA_SECRET_API_KEY,\r\n                },\r\n            });\r\n            return response.data.IpfsHash;\r\n        } catch (error) {\r\n            console.error('Error uploading image to IPFS:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const sendMessage = async () => {\r\n        const web3 = await getWeb3();\r\n        const accounts = await web3.eth.getAccounts();\r\n        const contract = await getContract(web3);\r\n\r\n        let imageHash = '';\r\n        if (image) {\r\n            try {\r\n                imageHash = await uploadImageToIPFS(image);\r\n                console.log('Image uploaded to IPFS:', imageHash);\r\n            } catch (error) {\r\n                setStatus('Failed to upload image');\r\n                return;\r\n            }\r\n        }\r\n\r\n        try {\r\n            console.log('Sending message...');\r\n            await contract.methods.sendMessage(recipient, message, imageHash).send({ from: accounts[0] });\r\n            setStatus('Message sent successfully!');\r\n            console.log('Message sent successfully!');\r\n        } catch (error) {\r\n            console.error('Error sending message:', error);\r\n            setStatus('Failed to send message');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card className=\"Card\">\r\n            <CardContent>\r\n                <Typography variant=\"h5\" gutterBottom>Send Message</Typography>\r\n                <TextField\r\n                    label=\"Recipient Address\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    value={recipient}\r\n                    onChange={(e) => setRecipient(e.target.value)}\r\n                />\r\n                <TextField\r\n                    label=\"Message\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    multiline\r\n                    rows={4}\r\n                    margin=\"normal\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                />\r\n                <Box mt={2} mb={2}>\r\n                    <Button variant=\"contained\" component=\"label\">\r\n                        Attach Image\r\n                        <input type=\"file\" hidden onChange={handleFileChange} />\r\n                    </Button>\r\n                </Box>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={sendMessage}>Send</Button>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>{status}</Typography>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SendMessage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}