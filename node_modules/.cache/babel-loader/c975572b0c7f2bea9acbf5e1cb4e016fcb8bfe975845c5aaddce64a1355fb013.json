{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhija\\\\Downloads\\\\decentralized-mail\\\\src\\\\components\\\\SendMessage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Card, CardContent, Box } from '@mui/material';\nimport { getWeb3, getContract } from '../utils/contract';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendMessage = () => {\n  _s();\n  const [recipient, setRecipient] = useState('');\n  const [message, setMessage] = useState('');\n  const [image, setImage] = useState(null);\n  const [status, setStatus] = useState('');\n  const sendMessage = async () => {\n    const web3 = await getWeb3();\n    const accounts = await web3.eth.getAccounts();\n    const contract = await getContract(web3);\n    try {\n      let imageHash = '';\n      if (image) {\n        const formData = new FormData();\n        formData.append('file', image);\n        const response = await fetch('https://api.pinata.cloud/pinning/pinFileToIPFS', {\n          method: 'POST',\n          headers: {\n            'pinata_api_key': process.env.REACT_APP_PINATA_API_KEY,\n            'pinata_secret_api_key': process.env.REACT_APP_PINATA_SECRET_KEY\n          },\n          body: formData\n        });\n        const data = await response.json();\n        imageHash = data.IpfsHash;\n      }\n      await contract.methods.sendMessage(recipient, message, imageHash).send({\n        from: accounts[0]\n      });\n      setStatus('Message sent successfully!');\n    } catch (error) {\n      console.error(error);\n      setStatus('Failed to send message');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"Card\",\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Recipient Address\",\n        fullWidth: true,\n        variant: \"outlined\",\n        value: recipient,\n        onChange: e => setRecipient(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Message\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        variant: \"outlined\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        style: {\n          margin: '20px 0'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setImage(e.target.files[0]),\n        style: {\n          marginBottom: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), status && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"error\",\n        gutterBottom: true,\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(SendMessage, \"zbILxQLDkmlpG68EEuaUFBIiM8c=\");\n_c = SendMessage;\nexport default SendMessage;\nvar _c;\n$RefreshReg$(_c, \"SendMessage\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Card","CardContent","Box","getWeb3","getContract","jsxDEV","_jsxDEV","SendMessage","_s","recipient","setRecipient","message","setMessage","image","setImage","status","setStatus","sendMessage","web3","accounts","eth","getAccounts","contract","imageHash","formData","FormData","append","response","fetch","method","headers","process","env","REACT_APP_PINATA_API_KEY","REACT_APP_PINATA_SECRET_KEY","body","data","json","IpfsHash","methods","send","from","error","console","className","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","value","onChange","e","target","multiline","rows","style","margin","type","files","marginBottom","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bhija/Downloads/decentralized-mail/src/components/SendMessage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Typography, Card, CardContent, Box } from '@mui/material';\r\nimport { getWeb3, getContract } from '../utils/contract';\r\n\r\nconst SendMessage = () => {\r\n    const [recipient, setRecipient] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [image, setImage] = useState(null);\r\n    const [status, setStatus] = useState('');\r\n\r\n    const sendMessage = async () => {\r\n        const web3 = await getWeb3();\r\n        const accounts = await web3.eth.getAccounts();\r\n        const contract = await getContract(web3);\r\n\r\n        try {\r\n            let imageHash = '';\r\n            if (image) {\r\n                const formData = new FormData();\r\n                formData.append('file', image);\r\n                const response = await fetch('https://api.pinata.cloud/pinning/pinFileToIPFS', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'pinata_api_key': process.env.REACT_APP_PINATA_API_KEY,\r\n                        'pinata_secret_api_key': process.env.REACT_APP_PINATA_SECRET_KEY\r\n                    },\r\n                    body: formData\r\n                });\r\n                const data = await response.json();\r\n                imageHash = data.IpfsHash;\r\n            }\r\n\r\n            await contract.methods.sendMessage(recipient, message, imageHash).send({ from: accounts[0] });\r\n            setStatus('Message sent successfully!');\r\n        } catch (error) {\r\n            console.error(error);\r\n            setStatus('Failed to send message');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card className=\"Card\">\r\n            <CardContent>\r\n                <Typography variant=\"h5\" gutterBottom>Send Message</Typography>\r\n                <TextField\r\n                    label=\"Recipient Address\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    value={recipient}\r\n                    onChange={(e) => setRecipient(e.target.value)}\r\n                />\r\n                <TextField\r\n                    label=\"Message\"\r\n                    fullWidth\r\n                    multiline\r\n                    rows={4}\r\n                    variant=\"outlined\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    style={{ margin: '20px 0' }}\r\n                />\r\n                <input\r\n                    type=\"file\"\r\n                    onChange={(e) => setImage(e.target.files[0])}\r\n                    style={{ marginBottom: '20px' }}\r\n                />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={sendMessage}>\r\n                    Send\r\n                </Button>\r\n                {status && (\r\n                    <Typography variant=\"body2\" color=\"error\" gutterBottom>\r\n                        {status}\r\n                    </Typography>\r\n                )}\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SendMessage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}