{"ast":null,"code":"import React,{useState}from'react';import{TextField,Button,Typography,Card,CardContent}from'@mui/material';import{getWeb3,getContract}from'../utils/contract';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SendMessage=()=>{const[recipient,setRecipient]=useState('');const[message,setMessage]=useState('');const[image,setImage]=useState(null);const[status,setStatus]=useState('');const sendMessage=async()=>{console.log('Starting sendMessage function...');try{const web3=await getWeb3();console.log('Web3 initialized:',web3);const accounts=await web3.eth.requestAccounts();console.log('Accounts retrieved:',accounts);const contract=await getContract(web3);console.log('Contract instance:',contract);let imageHash='';if(image){console.log('Uploading image to Pinata...');const formData=new FormData();formData.append('file',image);console.log('Pinata API Key:',process.env.REACT_APP_PINATA_API_KEY);console.log('Pinata Secret API Key:',process.env.REACT_APP_PINATA_SECRET_API_KEY);const response=await fetch('https://api.pinata.cloud/pinning/pinFileToIPFS',{method:'POST',headers:{'pinata_api_key':process.env.REACT_APP_PINATA_API_KEY,'pinata_secret_api_key':process.env.REACT_APP_PINATA_SECRET_API_KEY},body:formData});if(!response.ok){const errorText=await response.text();throw new Error(\"Pinata upload failed: \".concat(errorText));}const data=await response.json();imageHash=data.IpfsHash;console.log('Image uploaded to IPFS:',imageHash);}console.log('Sending message with contract method...');await contract.methods.sendMessage(recipient,message,imageHash).send({from:accounts[0],gas:5500000,gasPrice:web3.utils.toWei('1','gwei')});setStatus('Message sent successfully!');console.log('Message sent successfully!');}catch(error){console.error('Error:',error);setStatus('Failed to send message');}};return/*#__PURE__*/_jsx(Card,{className:\"Card\",children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Send Message\"}),/*#__PURE__*/_jsx(TextField,{label:\"Recipient Address\",fullWidth:true,variant:\"outlined\",value:recipient,onChange:e=>setRecipient(e.target.value)}),/*#__PURE__*/_jsx(TextField,{label:\"Message\",fullWidth:true,multiline:true,rows:4,variant:\"outlined\",value:message,onChange:e=>setMessage(e.target.value),style:{margin:'20px 0'}}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:e=>setImage(e.target.files[0]),style:{marginBottom:'20px'}}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:sendMessage,children:\"Send\"}),status&&/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:status==='Message sent successfully!'?'primary':'error',gutterBottom:true,children:status})]})});};export default SendMessage;","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Card","CardContent","getWeb3","getContract","jsx","_jsx","jsxs","_jsxs","SendMessage","recipient","setRecipient","message","setMessage","image","setImage","status","setStatus","sendMessage","console","log","web3","accounts","eth","requestAccounts","contract","imageHash","formData","FormData","append","process","env","REACT_APP_PINATA_API_KEY","REACT_APP_PINATA_SECRET_API_KEY","response","fetch","method","headers","body","ok","errorText","text","Error","concat","data","json","IpfsHash","methods","send","from","gas","gasPrice","utils","toWei","error","className","children","variant","gutterBottom","label","fullWidth","value","onChange","e","target","multiline","rows","style","margin","type","files","marginBottom","color","onClick"],"sources":["C:/Users/bhija/Downloads/decentralized-mail/src/components/SendMessage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Typography, Card, CardContent } from '@mui/material';\r\nimport { getWeb3, getContract } from '../utils/contract';\r\n\r\nconst SendMessage = () => {\r\n    const [recipient, setRecipient] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [image, setImage] = useState(null);\r\n    const [status, setStatus] = useState('');\r\n\r\n    const sendMessage = async () => {\r\n        console.log('Starting sendMessage function...');\r\n        try {\r\n            const web3 = await getWeb3();\r\n            console.log('Web3 initialized:', web3);\r\n            const accounts = await web3.eth.requestAccounts();\r\n            console.log('Accounts retrieved:', accounts);\r\n            const contract = await getContract(web3);\r\n            console.log('Contract instance:', contract);\r\n\r\n            let imageHash = '';\r\n            if (image) {\r\n                console.log('Uploading image to Pinata...');\r\n                const formData = new FormData();\r\n                formData.append('file', image);\r\n\r\n                console.log('Pinata API Key:', process.env.REACT_APP_PINATA_API_KEY);\r\n                console.log('Pinata Secret API Key:', process.env.REACT_APP_PINATA_SECRET_API_KEY);\r\n\r\n                const response = await fetch('https://api.pinata.cloud/pinning/pinFileToIPFS', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'pinata_api_key': process.env.REACT_APP_PINATA_API_KEY,\r\n                        'pinata_secret_api_key': process.env.REACT_APP_PINATA_SECRET_API_KEY\r\n                    },\r\n                    body: formData\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    const errorText = await response.text();\r\n                    throw new Error(`Pinata upload failed: ${errorText}`);\r\n                }\r\n\r\n                const data = await response.json();\r\n                imageHash = data.IpfsHash;\r\n                console.log('Image uploaded to IPFS:', imageHash);\r\n            }\r\n\r\n            console.log('Sending message with contract method...');\r\n            await contract.methods.sendMessage(recipient, message, imageHash).send({\r\n                from: accounts[0],\r\n                gas: 5500000,\r\n                gasPrice: web3.utils.toWei('1', 'gwei')\r\n            });\r\n            setStatus('Message sent successfully!');\r\n            console.log('Message sent successfully!');\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setStatus('Failed to send message');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card className=\"Card\">\r\n            <CardContent>\r\n                <Typography variant=\"h5\" gutterBottom>Send Message</Typography>\r\n                <TextField\r\n                    label=\"Recipient Address\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    value={recipient}\r\n                    onChange={(e) => setRecipient(e.target.value)}\r\n                />\r\n                <TextField\r\n                    label=\"Message\"\r\n                    fullWidth\r\n                    multiline\r\n                    rows={4}\r\n                    variant=\"outlined\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    style={{ margin: '20px 0' }}\r\n                />\r\n                <input\r\n                    type=\"file\"\r\n                    onChange={(e) => setImage(e.target.files[0])}\r\n                    style={{ marginBottom: '20px' }}\r\n                />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={sendMessage}>\r\n                    Send\r\n                </Button>\r\n                {status && (\r\n                    <Typography variant=\"body2\" color={status === 'Message sent successfully!' ? 'primary' : 'error'} gutterBottom>\r\n                        {status}\r\n                    </Typography>\r\n                )}\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SendMessage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}