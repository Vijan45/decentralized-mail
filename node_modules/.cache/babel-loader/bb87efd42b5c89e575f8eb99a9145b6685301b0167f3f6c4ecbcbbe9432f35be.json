{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhija\\\\Downloads\\\\decentralized-mail\\\\src\\\\components\\\\Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getWeb3, getContract } from '../utils/contract';\nimport { List, ListItem, ListItemText, Typography, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Inbox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [status, setStatus] = useState('');\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const contract = await getContract(web3);\n      try {\n        const userMessages = await contract.methods.getUserMessages(accounts[0]).call();\n        setMessages(userMessages);\n        setStatus('');\n      } catch (error) {\n        console.error(error);\n        setStatus('Failed to fetch messages');\n      }\n    };\n    fetchMessages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Inbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), status && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"error\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        divider: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: `From: ${msg.sender}`,\n          secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"span\",\n              variant: \"body2\",\n              color: \"textPrimary\",\n              children: msg.content.split('\\n').map((line, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 49\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"span\",\n              variant: \"caption\",\n              color: \"textSecondary\",\n              children: new Date(msg.timestamp * 1000).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Inbox, \"eVPFvhIuSHVZ6D0z29Vl0S1jFRs=\");\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useEffect","useState","getWeb3","getContract","List","ListItem","ListItemText","Typography","Box","jsxDEV","_jsxDEV","Fragment","_Fragment","Inbox","_s","messages","setMessages","status","setStatus","fetchMessages","web3","accounts","eth","getAccounts","contract","userMessages","methods","getUserMessages","call","error","console","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","map","msg","index","divider","primary","sender","secondary","component","content","split","line","idx","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/bhija/Downloads/decentralized-mail/src/components/Inbox.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getWeb3, getContract } from '../utils/contract';\r\nimport { List, ListItem, ListItemText, Typography, Box } from '@mui/material';\r\n\r\nconst Inbox = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [status, setStatus] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            const web3 = await getWeb3();\r\n            const accounts = await web3.eth.getAccounts();\r\n            const contract = await getContract(web3);\r\n\r\n            try {\r\n                const userMessages = await contract.methods.getUserMessages(accounts[0]).call();\r\n                setMessages(userMessages);\r\n                setStatus('');\r\n            } catch (error) {\r\n                console.error(error);\r\n                setStatus('Failed to fetch messages');\r\n            }\r\n        };\r\n\r\n        fetchMessages();\r\n    }, []);\r\n\r\n    return (\r\n        <Box>\r\n            <Typography variant=\"h5\" gutterBottom>Inbox</Typography>\r\n            {status && <Typography variant=\"body2\" color=\"error\">{status}</Typography>}\r\n            <List>\r\n                {messages.map((msg, index) => (\r\n                    <ListItem key={index} divider>\r\n                        <ListItemText\r\n                            primary={`From: ${msg.sender}`}\r\n                            secondary={\r\n                                <>\r\n                                    <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\r\n                                        {msg.content.split('\\n').map((line, idx) => (\r\n                                            <span key={idx}>\r\n                                                {line}\r\n                                                <br />\r\n                                            </span>\r\n                                        ))}\r\n                                    </Typography>\r\n                                    <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\r\n                                        {new Date(msg.timestamp * 1000).toLocaleString()}\r\n                                    </Typography>\r\n                                </>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Inbox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}