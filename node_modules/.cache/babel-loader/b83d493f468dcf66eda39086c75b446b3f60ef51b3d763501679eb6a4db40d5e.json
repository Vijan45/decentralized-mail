{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhija\\\\Downloads\\\\decentralized-mail\\\\src\\\\components\\\\Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { List, ListItem, ListItemText, Typography, Card, CardContent, Box, Button } from '@mui/material';\nimport { getWeb3, getContract } from '../utils/contract';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Inbox.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Inbox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [status, setStatus] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const contract = await getContract(web3);\n      try {\n        const userInbox = await contract.methods.getUserInbox(accounts[0]).call();\n        setMessages(userInbox);\n        setStatus('');\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n        setStatus('Failed to fetch messages');\n      }\n    };\n    fetchMessages();\n  }, []);\n  const handleDelete = async messageId => {\n    const web3 = await getWeb3();\n    const accounts = await web3.eth.getAccounts();\n    const contract = await getContract(web3);\n    try {\n      await contract.methods.deleteMessage(messageId).send({\n        from: accounts[0]\n      });\n      setMessages(messages.filter(message => message.id !== messageId));\n    } catch (error) {\n      console.error('Error deleting message:', error);\n      setStatus('Failed to delete message');\n    }\n  };\n  const handleViewDetail = messageId => {\n    navigate(`/message/${messageId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"inbox-card\",\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Inbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), status && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"error\",\n        gutterBottom: true,\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        className: \"message-list\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          divider: true,\n          className: \"message-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `From: ${msg.sender}`,\n            secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body2\",\n                className: \"message-content\",\n                children: msg.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 41\n              }, this), msg.imageHash && /*#__PURE__*/_jsxDEV(Box, {\n                className: \"message-image-container\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `https://gateway.pinata.cloud/ipfs/${msg.imageHash}`,\n                  alt: \"Attachment\",\n                  className: \"message-image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true),\n            onClick: () => handleViewDetail(msg.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: () => handleDelete(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Inbox, \"9fnVuAo89ccukDP9zrWUxRy8oEA=\", false, function () {\n  return [useNavigate];\n});\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useEffect","useState","List","ListItem","ListItemText","Typography","Card","CardContent","Box","Button","getWeb3","getContract","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Inbox","_s","messages","setMessages","status","setStatus","navigate","fetchMessages","web3","accounts","eth","getAccounts","contract","userInbox","methods","getUserInbox","call","error","console","handleDelete","messageId","deleteMessage","send","from","filter","message","id","handleViewDetail","className","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","map","msg","index","divider","primary","sender","secondary","component","content","imageHash","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bhija/Downloads/decentralized-mail/src/components/Inbox.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { List, ListItem, ListItemText, Typography, Card, CardContent, Box, Button } from '@mui/material';\r\nimport { getWeb3, getContract } from '../utils/contract';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Inbox.css';\r\n\r\nconst Inbox = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [status, setStatus] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            const web3 = await getWeb3();\r\n            const accounts = await web3.eth.getAccounts();\r\n            const contract = await getContract(web3);\r\n\r\n            try {\r\n                const userInbox = await contract.methods.getUserInbox(accounts[0]).call();\r\n                setMessages(userInbox);\r\n                setStatus('');\r\n            } catch (error) {\r\n                console.error('Error fetching messages:', error);\r\n                setStatus('Failed to fetch messages');\r\n            }\r\n        };\r\n\r\n        fetchMessages();\r\n    }, []);\r\n\r\n    const handleDelete = async (messageId) => {\r\n        const web3 = await getWeb3();\r\n        const accounts = await web3.eth.getAccounts();\r\n        const contract = await getContract(web3);\r\n\r\n        try {\r\n            await contract.methods.deleteMessage(messageId).send({ from: accounts[0] });\r\n            setMessages(messages.filter(message => message.id !== messageId));\r\n        } catch (error) {\r\n            console.error('Error deleting message:', error);\r\n            setStatus('Failed to delete message');\r\n        }\r\n    };\r\n\r\n    const handleViewDetail = (messageId) => {\r\n        navigate(`/message/${messageId}`);\r\n    };\r\n\r\n    return (\r\n        <Card className=\"inbox-card\">\r\n            <CardContent>\r\n                <Typography variant=\"h5\" gutterBottom>Inbox</Typography>\r\n                {status && (\r\n                    <Typography variant=\"body2\" color=\"error\" gutterBottom>\r\n                        {status}\r\n                    </Typography>\r\n                )}\r\n                <List className=\"message-list\">\r\n                    {messages.map((msg, index) => (\r\n                        <ListItem key={index} divider className=\"message-list-item\">\r\n                            <ListItemText\r\n                                primary={`From: ${msg.sender}`}\r\n                                secondary={\r\n                                    <>\r\n                                        <Typography component=\"span\" variant=\"body2\" className=\"message-content\">\r\n                                            {msg.content}\r\n                                        </Typography>\r\n                                        {msg.imageHash && (\r\n                                            <Box className=\"message-image-container\">\r\n                                                <img\r\n                                                    src={`https://gateway.pinata.cloud/ipfs/${msg.imageHash}`}\r\n                                                    alt=\"Attachment\"\r\n                                                    className=\"message-image\"\r\n                                                />\r\n                                            </Box>\r\n                                        )}\r\n                                    </>\r\n                                }\r\n                                onClick={() => handleViewDetail(msg.id)}\r\n                            />\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={() => handleDelete(index)}>\r\n                                Delete\r\n                            </Button>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Inbox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}