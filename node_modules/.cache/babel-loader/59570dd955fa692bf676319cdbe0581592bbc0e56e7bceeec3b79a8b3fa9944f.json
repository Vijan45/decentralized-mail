{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhija\\\\Downloads\\\\decentralized-mail\\\\src\\\\components\\\\Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { List, ListItem, ListItemText, Typography, Card, CardContent, Box, Avatar, Link, CircularProgress } from '@mui/material';\nimport { getWeb3, getContract } from '../utils/contract';\nimport PersonIcon from '@mui/icons-material/Person';\nimport ImageIcon from '@mui/icons-material/Image';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Inbox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [status, setStatus] = useState('Loading messages...');\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const contract = await getContract(web3);\n      try {\n        const userMessageIds = await contract.methods.getUserMessages(accounts[0]).call();\n        const userMessages = await Promise.all(userMessageIds.map(id => contract.methods.messages(id).call()));\n        setMessages(userMessages);\n        setStatus('');\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n        setStatus('Failed to fetch messages');\n      }\n    };\n    fetchMessages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"Card\",\n    style: {\n      marginTop: '20px',\n      padding: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Inbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), status && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"error\",\n        gutterBottom: true,\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), !messages.length && !status ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        gutterBottom: true,\n        children: \"No messages found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          divider: true,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `From: ${msg.sender}`,\n            secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body2\",\n                color: \"textPrimary\",\n                children: msg.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 45\n              }, this), msg.imageHash && /*#__PURE__*/_jsxDEV(Box, {\n                mt: 2,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: `https://gateway.pinata.cloud/ipfs/${msg.imageHash}`,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `https://gateway.pinata.cloud/ipfs/${msg.imageHash}`,\n                    alt: \"Attachment\",\n                    style: {\n                      maxWidth: '100%',\n                      height: 'auto',\n                      marginTop: '10px',\n                      cursor: 'pointer',\n                      borderRadius: '8px',\n                      boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                display: \"block\",\n                color: \"textSecondary\",\n                children: new Date(msg.timestamp * 1000).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), status === 'Loading messages...' && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 54\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Inbox, \"DjT7CLhfeBw4MiTOG8IIczSAek0=\");\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useEffect","useState","List","ListItem","ListItemText","Typography","Card","CardContent","Box","Avatar","Link","CircularProgress","getWeb3","getContract","PersonIcon","ImageIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Inbox","_s","messages","setMessages","status","setStatus","fetchMessages","web3","accounts","eth","getAccounts","contract","userMessageIds","methods","getUserMessages","call","userMessages","Promise","all","map","id","error","console","className","style","marginTop","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","length","msg","index","divider","primary","sender","secondary","component","content","imageHash","mt","href","target","rel","src","alt","maxWidth","height","cursor","borderRadius","boxShadow","display","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/bhija/Downloads/decentralized-mail/src/components/Inbox.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { List, ListItem, ListItemText, Typography, Card, CardContent, Box, Avatar, Link, CircularProgress } from '@mui/material';\r\nimport { getWeb3, getContract } from '../utils/contract';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ImageIcon from '@mui/icons-material/Image';\r\n\r\nconst Inbox = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [status, setStatus] = useState('Loading messages...');\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            const web3 = await getWeb3();\r\n            const accounts = await web3.eth.getAccounts();\r\n            const contract = await getContract(web3);\r\n\r\n            try {\r\n                const userMessageIds = await contract.methods.getUserMessages(accounts[0]).call();\r\n                const userMessages = await Promise.all(\r\n                    userMessageIds.map(id => contract.methods.messages(id).call())\r\n                );\r\n                setMessages(userMessages);\r\n                setStatus('');\r\n            } catch (error) {\r\n                console.error('Error fetching messages:', error);\r\n                setStatus('Failed to fetch messages');\r\n            }\r\n        };\r\n\r\n        fetchMessages();\r\n    }, []);\r\n\r\n    return (\r\n        <Card className=\"Card\" style={{ marginTop: '20px', padding: '20px' }}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" gutterBottom>Inbox</Typography>\r\n                {status && (\r\n                    <Typography variant=\"body2\" color=\"error\" gutterBottom>\r\n                        {status}\r\n                    </Typography>\r\n                )}\r\n                {!messages.length && !status ? (\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>No messages found</Typography>\r\n                ) : (\r\n                    <List>\r\n                        {messages.map((msg, index) => (\r\n                            <ListItem key={index} divider>\r\n                                <Avatar>\r\n                                    <PersonIcon />\r\n                                </Avatar>\r\n                                <ListItemText\r\n                                    primary={`From: ${msg.sender}`}\r\n                                    secondary={\r\n                                        <>\r\n                                            <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\r\n                                                {msg.content}\r\n                                            </Typography>\r\n                                            {msg.imageHash && (\r\n                                                <Box mt={2}>\r\n                                                    <Link href={`https://gateway.pinata.cloud/ipfs/${msg.imageHash}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                        <img\r\n                                                            src={`https://gateway.pinata.cloud/ipfs/${msg.imageHash}`}\r\n                                                            alt=\"Attachment\"\r\n                                                            style={{ maxWidth: '100%', height: 'auto', marginTop: '10px', cursor: 'pointer', borderRadius: '8px', boxShadow: '0 2px 8px rgba(0,0,0,0.1)' }}\r\n                                                        />\r\n                                                    </Link>\r\n                                                </Box>\r\n                                            )}\r\n                                            <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\">\r\n                                                {new Date(msg.timestamp * 1000).toLocaleString()}\r\n                                            </Typography>\r\n                                        </>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                )}\r\n                {status === 'Loading messages...' && <CircularProgress />}\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Inbox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}