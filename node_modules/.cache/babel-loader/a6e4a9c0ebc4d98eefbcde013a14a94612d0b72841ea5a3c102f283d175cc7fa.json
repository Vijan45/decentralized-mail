{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhija\\\\Downloads\\\\decentralized-mail\\\\src\\\\components\\\\MessageDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Card, CardContent, Typography, Box } from '@mui/material';\nimport { getWeb3, getContract } from '../utils/contract';\nimport '../styles/MessageDetail.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MessageDetail = () => {\n  _s();\n  const {\n    messageId\n  } = useParams();\n  const [message, setMessage] = useState(null);\n  const [status, setStatus] = useState('');\n  useEffect(() => {\n    const fetchMessage = async () => {\n      const web3 = await getWeb3();\n      const contract = await getContract(web3);\n      try {\n        const msg = await contract.methods.getMessageById(messageId).call();\n        setMessage(msg);\n        setStatus('');\n      } catch (error) {\n        console.error('Error fetching message:', error);\n        setStatus('Failed to fetch message');\n      }\n    };\n    fetchMessage();\n  }, [messageId]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"card\",\n    style: {\n      backgroundColor: '#002366',\n      color: 'white'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Message Detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), status && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"error\",\n        gutterBottom: true,\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), message && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"From: \", message.sender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"To: \", message.receiver]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          paragraph: true,\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), message.imageHash && /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://gateway.pinata.cloud/ipfs/${message.imageHash}`,\n            alt: \"Attachment\",\n            style: {\n              maxWidth: '100%',\n              height: 'auto',\n              marginTop: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(MessageDetail, \"DTxgX2QfIMxfT9AgjMARMxQjG/Y=\", false, function () {\n  return [useParams];\n});\n_c = MessageDetail;\nexport default MessageDetail;\nvar _c;\n$RefreshReg$(_c, \"MessageDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Card","CardContent","Typography","Box","getWeb3","getContract","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageDetail","_s","messageId","message","setMessage","status","setStatus","fetchMessage","web3","contract","msg","methods","getMessageById","call","error","console","className","style","backgroundColor","color","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","sender","receiver","paragraph","content","imageHash","mt","src","alt","maxWidth","height","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/bhija/Downloads/decentralized-mail/src/components/MessageDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Card, CardContent, Typography, Box } from '@mui/material';\r\nimport { getWeb3, getContract } from '../utils/contract';\r\nimport '../styles/MessageDetail.css';\r\n\r\nconst MessageDetail = () => {\r\n    const { messageId } = useParams();\r\n    const [message, setMessage] = useState(null);\r\n    const [status, setStatus] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchMessage = async () => {\r\n            const web3 = await getWeb3();\r\n            const contract = await getContract(web3);\r\n\r\n            try {\r\n                const msg = await contract.methods.getMessageById(messageId).call();\r\n                setMessage(msg);\r\n                setStatus('');\r\n            } catch (error) {\r\n                console.error('Error fetching message:', error);\r\n                setStatus('Failed to fetch message');\r\n            }\r\n        };\r\n\r\n        fetchMessage();\r\n    }, [messageId]);\r\n\r\n    return (\r\n        <Card className=\"card\" style={{ backgroundColor: '#002366', color: 'white' }}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" gutterBottom>Message Detail</Typography>\r\n                {status && (\r\n                    <Typography variant=\"body2\" color=\"error\" gutterBottom>\r\n                        {status}\r\n                    </Typography>\r\n                )}\r\n                {message && (\r\n                    <>\r\n                        <Typography variant=\"h6\">From: {message.sender}</Typography>\r\n                        <Typography variant=\"h6\">To: {message.receiver}</Typography>\r\n                        <Typography variant=\"body1\" paragraph>{message.content}</Typography>\r\n                        {message.imageHash && (\r\n                            <Box mt={2}>\r\n                                <img\r\n                                    src={`https://gateway.pinata.cloud/ipfs/${message.imageHash}`}\r\n                                    alt=\"Attachment\"\r\n                                    style={{ maxWidth: '100%', height: 'auto', marginTop: '10px' }}\r\n                                />\r\n                            </Box>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default MessageDetail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,GAAG,QAAQ,eAAe;AAClE,SAASC,OAAO,EAAEC,WAAW,QAAQ,mBAAmB;AACxD,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAU,CAAC,GAAGb,SAAS,CAAC,CAAC;EACjC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMoB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,IAAI,GAAG,MAAMd,OAAO,CAAC,CAAC;MAC5B,MAAMe,QAAQ,GAAG,MAAMd,WAAW,CAACa,IAAI,CAAC;MAExC,IAAI;QACA,MAAME,GAAG,GAAG,MAAMD,QAAQ,CAACE,OAAO,CAACC,cAAc,CAACV,SAAS,CAAC,CAACW,IAAI,CAAC,CAAC;QACnET,UAAU,CAACM,GAAG,CAAC;QACfJ,SAAS,CAAC,EAAE,CAAC;MACjB,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CR,SAAS,CAAC,yBAAyB,CAAC;MACxC;IACJ,CAAC;IAEDC,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACL,SAAS,CAAC,CAAC;EAEf,oBACIL,OAAA,CAACP,IAAI;IAAC0B,SAAS,EAAC,MAAM;IAACC,KAAK,EAAE;MAAEC,eAAe,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAAC,QAAA,eACzEvB,OAAA,CAACN,WAAW;MAAA6B,QAAA,gBACRvB,OAAA,CAACL,UAAU;QAAC6B,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAF,QAAA,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,EAChErB,MAAM,iBACHR,OAAA,CAACL,UAAU;QAAC6B,OAAO,EAAC,OAAO;QAACF,KAAK,EAAC,OAAO;QAACG,YAAY;QAAAF,QAAA,EACjDf;MAAM;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACf,EACAvB,OAAO,iBACJN,OAAA,CAAAE,SAAA;QAAAqB,QAAA,gBACIvB,OAAA,CAACL,UAAU;UAAC6B,OAAO,EAAC,IAAI;UAAAD,QAAA,GAAC,QAAM,EAACjB,OAAO,CAACwB,MAAM;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAC5D7B,OAAA,CAACL,UAAU;UAAC6B,OAAO,EAAC,IAAI;UAAAD,QAAA,GAAC,MAAI,EAACjB,OAAO,CAACyB,QAAQ;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAC5D7B,OAAA,CAACL,UAAU;UAAC6B,OAAO,EAAC,OAAO;UAACQ,SAAS;UAAAT,QAAA,EAAEjB,OAAO,CAAC2B;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,EACnEvB,OAAO,CAAC4B,SAAS,iBACdlC,OAAA,CAACJ,GAAG;UAACuC,EAAE,EAAE,CAAE;UAAAZ,QAAA,eACPvB,OAAA;YACIoC,GAAG,EAAE,qCAAqC9B,OAAO,CAAC4B,SAAS,EAAG;YAC9DG,GAAG,EAAC,YAAY;YAChBjB,KAAK,EAAE;cAAEkB,QAAQ,EAAE,MAAM;cAAEC,MAAM,EAAE,MAAM;cAAEC,SAAS,EAAE;YAAO;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CACR;MAAA,eACH,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEf,CAAC;AAACzB,EAAA,CAnDID,aAAa;EAAA,QACOX,SAAS;AAAA;AAAAiD,EAAA,GAD7BtC,aAAa;AAqDnB,eAAeA,aAAa;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}