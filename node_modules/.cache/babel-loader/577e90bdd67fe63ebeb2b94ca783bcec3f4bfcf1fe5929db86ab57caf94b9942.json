{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhija\\\\Downloads\\\\decentralized-mail\\\\src\\\\components\\\\Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getWeb3, getContract } from '../utils/contract';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inbox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [status, setStatus] = useState('');\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const contract = await getContract(web3);\n      try {\n        const userMessages = await contract.methods.getUserMessages(accounts[0]).call();\n        setMessages(userMessages);\n        setStatus('');\n      } catch (error) {\n        console.error(error);\n        setStatus('Failed to fetch messages');\n      }\n    };\n    fetchMessages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Inbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"From: \", msg.sender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Message: \", msg.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Inbox, \"eVPFvhIuSHVZ6D0z29Vl0S1jFRs=\");\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useEffect","useState","getWeb3","getContract","jsxDEV","_jsxDEV","Inbox","_s","messages","setMessages","status","setStatus","fetchMessages","web3","accounts","eth","getAccounts","contract","userMessages","methods","getUserMessages","call","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","sender","content","_c","$RefreshReg$"],"sources":["C:/Users/bhija/Downloads/decentralized-mail/src/components/Inbox.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getWeb3, getContract } from '../utils/contract';\r\n\r\nconst Inbox = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [status, setStatus] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            const web3 = await getWeb3();\r\n            const accounts = await web3.eth.getAccounts();\r\n            const contract = await getContract(web3);\r\n\r\n            try {\r\n                const userMessages = await contract.methods.getUserMessages(accounts[0]).call();\r\n                setMessages(userMessages);\r\n                setStatus('');\r\n            } catch (error) {\r\n                console.error(error);\r\n                setStatus('Failed to fetch messages');\r\n            }\r\n        };\r\n\r\n        fetchMessages();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Inbox</h2>\r\n            {status && <p>{status}</p>}\r\n            <ul>\r\n                {messages.map((msg, index) => (\r\n                    <li key={index}>\r\n                        <p>From: {msg.sender}</p>\r\n                        <p>Message: {msg.content}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Inbox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,WAAW,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,IAAI,GAAG,MAAMX,OAAO,CAAC,CAAC;MAC5B,MAAMY,QAAQ,GAAG,MAAMD,IAAI,CAACE,GAAG,CAACC,WAAW,CAAC,CAAC;MAC7C,MAAMC,QAAQ,GAAG,MAAMd,WAAW,CAACU,IAAI,CAAC;MAExC,IAAI;QACA,MAAMK,YAAY,GAAG,MAAMD,QAAQ,CAACE,OAAO,CAACC,eAAe,CAACN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACO,IAAI,CAAC,CAAC;QAC/EZ,WAAW,CAACS,YAAY,CAAC;QACzBP,SAAS,CAAC,EAAE,CAAC;MACjB,CAAC,CAAC,OAAOW,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBX,SAAS,CAAC,0BAA0B,CAAC;MACzC;IACJ,CAAC;IAEDC,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACblB,MAAM,iBAAIL,OAAA;MAAAmB,QAAA,EAAId;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BvB,OAAA;MAAAmB,QAAA,EACKhB,QAAQ,CAACqB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrB1B,OAAA;QAAAmB,QAAA,gBACInB,OAAA;UAAAmB,QAAA,GAAG,QAAM,EAACM,GAAG,CAACE,MAAM;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBvB,OAAA;UAAAmB,QAAA,GAAG,WAAS,EAACM,GAAG,CAACG,OAAO;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFxBG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACrB,EAAA,CArCID,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAuCX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}