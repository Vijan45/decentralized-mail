{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhija\\\\Downloads\\\\decentralized-mail\\\\src\\\\components\\\\SendMessage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getWeb3, getContract } from '../utils/contract';\nimport { TextField, Button, Typography, Box, IconButton } from '@mui/material';\nimport { AttachFile } from '@mui/icons-material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendMessage = () => {\n  _s();\n  const [recipient, setRecipient] = useState('');\n  const [message, setMessage] = useState('');\n  const [image, setImage] = useState(null);\n  const [status, setStatus] = useState('');\n  const handleImageUpload = async e => {\n    const file = e.target.files[0];\n    setImage(file);\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('https://api.pinata.cloud/pinning/pinFileToIPFS', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'pinata_api_key': process.env.REACT_APP_PINATA_API_KEY,\n          'pinata_secret_api_key': process.env.REACT_APP_PINATA_SECRET_API_KEY\n        }\n      });\n      const imageHash = response.data.IpfsHash;\n      setStatus(`Image uploaded: ${imageHash}`);\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setStatus('Failed to upload image');\n    }\n  };\n  const sendMessage = async () => {\n    const web3 = await getWeb3();\n    const accounts = await web3.eth.getAccounts();\n    const contract = await getContract(web3);\n    try {\n      let content = message;\n      if (image) {\n        const formData = new FormData();\n        formData.append('file', image);\n        const response = await axios.post('https://api.pinata.cloud/pinning/pinFileToIPFS', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'pinata_api_key': process.env.REACT_APP_PINATA_API_KEY,\n            'pinata_secret_api_key': process.env.REACT_APP_PINATA_SECRET_API_KEY\n          }\n        });\n        const imageHash = response.data.IpfsHash;\n        content += `\\nImage: https://gateway.pinata.cloud/ipfs/${imageHash}`;\n      }\n      await contract.methods.sendMessage(recipient, content).send({\n        from: accounts[0]\n      });\n      setStatus('Message sent successfully!');\n    } catch (error) {\n      console.error(error);\n      setStatus('Failed to send message');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Recipient Address\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: recipient,\n        onChange: e => setRecipient(e.target.value),\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Message\",\n        variant: \"outlined\",\n        multiline: true,\n        rows: 4,\n        fullWidth: true,\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        accept: \"image/*\",\n        id: \"icon-button-file\",\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"icon-button-file\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          \"aria-label\": \"upload picture\",\n          component: \"span\",\n          children: /*#__PURE__*/_jsxDEV(AttachFile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: status.includes('Failed') ? 'error' : 'textPrimary',\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(SendMessage, \"zbILxQLDkmlpG68EEuaUFBIiM8c=\");\n_c = SendMessage;\nexport default SendMessage;\nvar _c;\n$RefreshReg$(_c, \"SendMessage\");","map":{"version":3,"names":["React","useState","getWeb3","getContract","TextField","Button","Typography","Box","IconButton","AttachFile","axios","jsxDEV","_jsxDEV","SendMessage","_s","recipient","setRecipient","message","setMessage","image","setImage","status","setStatus","handleImageUpload","e","file","target","files","formData","FormData","append","response","post","headers","process","env","REACT_APP_PINATA_API_KEY","REACT_APP_PINATA_SECRET_API_KEY","imageHash","data","IpfsHash","error","console","sendMessage","web3","accounts","eth","getAccounts","contract","content","methods","send","from","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","value","onChange","margin","multiline","rows","accept","id","type","style","display","htmlFor","color","component","onClick","includes","_c","$RefreshReg$"],"sources":["C:/Users/bhija/Downloads/decentralized-mail/src/components/SendMessage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { getWeb3, getContract } from '../utils/contract';\r\nimport { TextField, Button, Typography, Box, IconButton } from '@mui/material';\r\nimport { AttachFile } from '@mui/icons-material';\r\nimport axios from 'axios';\r\n\r\nconst SendMessage = () => {\r\n    const [recipient, setRecipient] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [image, setImage] = useState(null);\r\n    const [status, setStatus] = useState('');\r\n\r\n    const handleImageUpload = async (e) => {\r\n        const file = e.target.files[0];\r\n        setImage(file);\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            const response = await axios.post('https://api.pinata.cloud/pinning/pinFileToIPFS', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'pinata_api_key': process.env.REACT_APP_PINATA_API_KEY,\r\n                    'pinata_secret_api_key': process.env.REACT_APP_PINATA_SECRET_API_KEY\r\n                }\r\n            });\r\n\r\n            const imageHash = response.data.IpfsHash;\r\n            setStatus(`Image uploaded: ${imageHash}`);\r\n        } catch (error) {\r\n            console.error('Error uploading image:', error);\r\n            setStatus('Failed to upload image');\r\n        }\r\n    };\r\n\r\n    const sendMessage = async () => {\r\n        const web3 = await getWeb3();\r\n        const accounts = await web3.eth.getAccounts();\r\n        const contract = await getContract(web3);\r\n\r\n        try {\r\n            let content = message;\r\n            if (image) {\r\n                const formData = new FormData();\r\n                formData.append('file', image);\r\n\r\n                const response = await axios.post('https://api.pinata.cloud/pinning/pinFileToIPFS', formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                        'pinata_api_key': process.env.REACT_APP_PINATA_API_KEY,\r\n                        'pinata_secret_api_key': process.env.REACT_APP_PINATA_SECRET_API_KEY\r\n                    }\r\n                });\r\n\r\n                const imageHash = response.data.IpfsHash;\r\n                content += `\\nImage: https://gateway.pinata.cloud/ipfs/${imageHash}`;\r\n            }\r\n\r\n            await contract.methods.sendMessage(recipient, content).send({ from: accounts[0] });\r\n            setStatus('Message sent successfully!');\r\n        } catch (error) {\r\n            console.error(error);\r\n            setStatus('Failed to send message');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Typography variant=\"h5\" gutterBottom>Send Message</Typography>\r\n            <form>\r\n                <TextField\r\n                    label=\"Recipient Address\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={recipient}\r\n                    onChange={(e) => setRecipient(e.target.value)}\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    label=\"Message\"\r\n                    variant=\"outlined\"\r\n                    multiline\r\n                    rows={4}\r\n                    fullWidth\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    margin=\"normal\"\r\n                />\r\n                <input\r\n                    accept=\"image/*\"\r\n                    id=\"icon-button-file\"\r\n                    type=\"file\"\r\n                    style={{ display: 'none' }}\r\n                    onChange={handleImageUpload}\r\n                />\r\n                <label htmlFor=\"icon-button-file\">\r\n                    <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                </label>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={sendMessage}>\r\n                    Send\r\n                </Button>\r\n            </form>\r\n            <Typography variant=\"body2\" color={status.includes('Failed') ? 'error' : 'textPrimary'}>{status}</Typography>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default SendMessage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}