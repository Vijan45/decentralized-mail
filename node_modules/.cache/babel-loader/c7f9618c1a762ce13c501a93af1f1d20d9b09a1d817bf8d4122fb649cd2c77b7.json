{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhija\\\\Downloads\\\\decentralized-mail\\\\src\\\\components\\\\SendMessage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Card, CardContent, Box } from '@mui/material';\nimport { getWeb3, getContract } from '../utils/contract';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendMessage = () => {\n  _s();\n  const [recipient, setRecipient] = useState('');\n  const [message, setMessage] = useState('');\n  const [image, setImage] = useState(null);\n  const [status, setStatus] = useState('');\n  const sendMessage = async () => {\n    console.log('Starting sendMessage function...');\n    try {\n      const web3 = await getWeb3();\n      console.log('Web3 initialized:', web3);\n      const accounts = await web3.eth.requestAccounts(); // Use requestAccounts instead of enable\n      console.log('Accounts retrieved:', accounts);\n      const contract = await getContract(web3);\n      console.log('Contract instance:', contract);\n      let imageHash = '';\n      if (image) {\n        console.log('Uploading image to Pinata...');\n        const formData = new FormData();\n        formData.append('file', image);\n        try {\n          const response = await fetch('https://api.pinata.cloud/pinning/pinFileToIPFS', {\n            method: 'POST',\n            headers: {\n              'pinata_api_key': process.env.REACT_APP_PINATA_API_KEY,\n              'pinata_secret_api_key': process.env.REACT_APP_PINATA_SECRET_API_KEY\n            },\n            body: formData\n          });\n          if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(`Pinata upload failed: ${errorText}`);\n          }\n          const data = await response.json();\n          imageHash = data.IpfsHash;\n          console.log('Image uploaded to IPFS:', imageHash);\n        } catch (uploadError) {\n          console.error('Error uploading image to IPFS:', uploadError);\n          setStatus('Failed to upload image');\n          return;\n        }\n      }\n      console.log('Sending message with contract method...');\n      await contract.methods.sendMessage(recipient, message, imageHash).send({\n        from: accounts[0],\n        gas: 5500000,\n        gasPrice: web3.utils.toWei('1', 'gwei') // Ensure this value is correct for the RSK testnet\n      });\n      setStatus('Message sent successfully!');\n      console.log('Message sent successfully!');\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setStatus('Failed to send message');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"Card\",\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Recipient Address\",\n        fullWidth: true,\n        variant: \"outlined\",\n        value: recipient,\n        onChange: e => setRecipient(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Message\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        variant: \"outlined\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        style: {\n          margin: '20px 0'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setImage(e.target.files[0]),\n        style: {\n          marginBottom: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), status && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: status === 'Message sent successfully!' ? 'primary' : 'error',\n        gutterBottom: true,\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(SendMessage, \"zbILxQLDkmlpG68EEuaUFBIiM8c=\");\n_c = SendMessage;\nexport default SendMessage;\nvar _c;\n$RefreshReg$(_c, \"SendMessage\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Card","CardContent","Box","getWeb3","getContract","jsxDEV","_jsxDEV","SendMessage","_s","recipient","setRecipient","message","setMessage","image","setImage","status","setStatus","sendMessage","console","log","web3","accounts","eth","requestAccounts","contract","imageHash","formData","FormData","append","response","fetch","method","headers","process","env","REACT_APP_PINATA_API_KEY","REACT_APP_PINATA_SECRET_API_KEY","body","ok","errorText","text","Error","data","json","IpfsHash","uploadError","error","methods","send","from","gas","gasPrice","utils","toWei","className","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","value","onChange","e","target","multiline","rows","style","margin","type","files","marginBottom","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bhija/Downloads/decentralized-mail/src/components/SendMessage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Typography, Card, CardContent, Box } from '@mui/material';\r\nimport { getWeb3, getContract } from '../utils/contract';\r\n\r\nconst SendMessage = () => {\r\n    const [recipient, setRecipient] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [image, setImage] = useState(null);\r\n    const [status, setStatus] = useState('');\r\n\r\n    const sendMessage = async () => {\r\n        console.log('Starting sendMessage function...');\r\n        try {\r\n            const web3 = await getWeb3();\r\n            console.log('Web3 initialized:', web3);\r\n            const accounts = await web3.eth.requestAccounts(); // Use requestAccounts instead of enable\r\n            console.log('Accounts retrieved:', accounts);\r\n            const contract = await getContract(web3);\r\n            console.log('Contract instance:', contract);\r\n\r\n            let imageHash = '';\r\n            if (image) {\r\n                console.log('Uploading image to Pinata...');\r\n                const formData = new FormData();\r\n                formData.append('file', image);\r\n\r\n                try {\r\n                    const response = await fetch('https://api.pinata.cloud/pinning/pinFileToIPFS', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'pinata_api_key': process.env.REACT_APP_PINATA_API_KEY,\r\n                            'pinata_secret_api_key': process.env.REACT_APP_PINATA_SECRET_API_KEY\r\n                        },\r\n                        body: formData\r\n                    });\r\n\r\n                    if (!response.ok) {\r\n                        const errorText = await response.text();\r\n                        throw new Error(`Pinata upload failed: ${errorText}`);\r\n                    }\r\n\r\n                    const data = await response.json();\r\n                    imageHash = data.IpfsHash;\r\n                    console.log('Image uploaded to IPFS:', imageHash);\r\n                } catch (uploadError) {\r\n                    console.error('Error uploading image to IPFS:', uploadError);\r\n                    setStatus('Failed to upload image');\r\n                    return;\r\n                }\r\n            }\r\n\r\n            console.log('Sending message with contract method...');\r\n            await contract.methods.sendMessage(recipient, message, imageHash).send({\r\n                from: accounts[0],\r\n                gas: 5500000,\r\n                gasPrice: web3.utils.toWei('1', 'gwei') // Ensure this value is correct for the RSK testnet\r\n            });\r\n            setStatus('Message sent successfully!');\r\n            console.log('Message sent successfully!');\r\n        } catch (error) {\r\n            console.error('Error sending message:', error);\r\n            setStatus('Failed to send message');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card className=\"Card\">\r\n            <CardContent>\r\n                <Typography variant=\"h5\" gutterBottom>Send Message</Typography>\r\n                <TextField\r\n                    label=\"Recipient Address\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    value={recipient}\r\n                    onChange={(e) => setRecipient(e.target.value)}\r\n                />\r\n                <TextField\r\n                    label=\"Message\"\r\n                    fullWidth\r\n                    multiline\r\n                    rows={4}\r\n                    variant=\"outlined\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    style={{ margin: '20px 0' }}\r\n                />\r\n                <input\r\n                    type=\"file\"\r\n                    onChange={(e) => setImage(e.target.files[0])}\r\n                    style={{ marginBottom: '20px' }}\r\n                />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={sendMessage}>\r\n                    Send\r\n                </Button>\r\n                {status && (\r\n                    <Typography variant=\"body2\" color={status === 'Message sent successfully!' ? 'primary' : 'error'} gutterBottom>\r\n                        {status}\r\n                    </Typography>\r\n                )}\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SendMessage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,MAAM,EAAEC,UAAU,EAAEC,IAAI,EAAEC,WAAW,EAAEC,GAAG,QAAQ,eAAe;AACrF,SAASC,OAAO,EAAEC,WAAW,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMqB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5BC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAC/C,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMjB,OAAO,CAAC,CAAC;MAC5Be,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,IAAI,CAAC;MACtC,MAAMC,QAAQ,GAAG,MAAMD,IAAI,CAACE,GAAG,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;MACnDL,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEE,QAAQ,CAAC;MAC5C,MAAMG,QAAQ,GAAG,MAAMpB,WAAW,CAACgB,IAAI,CAAC;MACxCF,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEK,QAAQ,CAAC;MAE3C,IAAIC,SAAS,GAAG,EAAE;MAClB,IAAIZ,KAAK,EAAE;QACPK,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;QAC3C,MAAMO,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEf,KAAK,CAAC;QAE9B,IAAI;UACA,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgD,EAAE;YAC3EC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACL,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC,wBAAwB;cACtD,uBAAuB,EAAEF,OAAO,CAACC,GAAG,CAACE;YACzC,CAAC;YACDC,IAAI,EAAEX;UACV,CAAC,CAAC;UAEF,IAAI,CAACG,QAAQ,CAACS,EAAE,EAAE;YACd,MAAMC,SAAS,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;YACvC,MAAM,IAAIC,KAAK,CAAC,yBAAyBF,SAAS,EAAE,CAAC;UACzD;UAEA,MAAMG,IAAI,GAAG,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC;UAClClB,SAAS,GAAGiB,IAAI,CAACE,QAAQ;UACzB1B,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEM,SAAS,CAAC;QACrD,CAAC,CAAC,OAAOoB,WAAW,EAAE;UAClB3B,OAAO,CAAC4B,KAAK,CAAC,gCAAgC,EAAED,WAAW,CAAC;UAC5D7B,SAAS,CAAC,wBAAwB,CAAC;UACnC;QACJ;MACJ;MAEAE,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;MACtD,MAAMK,QAAQ,CAACuB,OAAO,CAAC9B,WAAW,CAACR,SAAS,EAAEE,OAAO,EAAEc,SAAS,CAAC,CAACuB,IAAI,CAAC;QACnEC,IAAI,EAAE5B,QAAQ,CAAC,CAAC,CAAC;QACjB6B,GAAG,EAAE,OAAO;QACZC,QAAQ,EAAE/B,IAAI,CAACgC,KAAK,CAACC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;MAC5C,CAAC,CAAC;MACFrC,SAAS,CAAC,4BAA4B,CAAC;MACvCE,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC7C,CAAC,CAAC,OAAO2B,KAAK,EAAE;MACZ5B,OAAO,CAAC4B,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C9B,SAAS,CAAC,wBAAwB,CAAC;IACvC;EACJ,CAAC;EAED,oBACIV,OAAA,CAACN,IAAI;IAACsD,SAAS,EAAC,MAAM;IAAAC,QAAA,eAClBjD,OAAA,CAACL,WAAW;MAAAsD,QAAA,gBACRjD,OAAA,CAACP,UAAU;QAACyD,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAF,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC/DvD,OAAA,CAACT,SAAS;QACNiE,KAAK,EAAC,mBAAmB;QACzBC,SAAS;QACTP,OAAO,EAAC,UAAU;QAClBQ,KAAK,EAAEvD,SAAU;QACjBwD,QAAQ,EAAGC,CAAC,IAAKxD,YAAY,CAACwD,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACFvD,OAAA,CAACT,SAAS;QACNiE,KAAK,EAAC,SAAS;QACfC,SAAS;QACTK,SAAS;QACTC,IAAI,EAAE,CAAE;QACRb,OAAO,EAAC,UAAU;QAClBQ,KAAK,EAAErD,OAAQ;QACfsD,QAAQ,EAAGC,CAAC,IAAKtD,UAAU,CAACsD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC5CM,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAS;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACFvD,OAAA;QACIkE,IAAI,EAAC,MAAM;QACXP,QAAQ,EAAGC,CAAC,IAAKpD,QAAQ,CAACoD,CAAC,CAACC,MAAM,CAACM,KAAK,CAAC,CAAC,CAAC,CAAE;QAC7CH,KAAK,EAAE;UAAEI,YAAY,EAAE;QAAO;MAAE;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACFvD,OAAA,CAACR,MAAM;QAAC0D,OAAO,EAAC,WAAW;QAACmB,KAAK,EAAC,SAAS;QAACC,OAAO,EAAE3D,WAAY;QAAAsC,QAAA,EAAC;MAElE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR9C,MAAM,iBACHT,OAAA,CAACP,UAAU;QAACyD,OAAO,EAAC,OAAO;QAACmB,KAAK,EAAE5D,MAAM,KAAK,4BAA4B,GAAG,SAAS,GAAG,OAAQ;QAAC0C,YAAY;QAAAF,QAAA,EACzGxC;MAAM;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACf;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEf,CAAC;AAACrD,EAAA,CAlGID,WAAW;AAAAsE,EAAA,GAAXtE,WAAW;AAoGjB,eAAeA,WAAW;AAAC,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}