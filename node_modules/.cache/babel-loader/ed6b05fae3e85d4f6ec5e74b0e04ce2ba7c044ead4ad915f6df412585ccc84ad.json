{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhija\\\\Downloads\\\\decentralized-mail\\\\src\\\\components\\\\Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { List, ListItem, ListItemText, Typography, Card, CardContent, Box } from '@mui/material';\nimport { getWeb3, getContract } from '../utils/contract';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Inbox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [status, setStatus] = useState('');\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const contract = await getContract(web3);\n      try {\n        const userMessageIds = await contract.methods.getUserMessages(accounts[0]).call();\n        const userMessages = await Promise.all(userMessageIds.map(id => contract.methods.messages(id).call()));\n        setMessages(userMessages);\n        setStatus('');\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n        setStatus('Failed to fetch messages');\n      }\n    };\n    fetchMessages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"Card\",\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Inbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), status && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"error\",\n        gutterBottom: true,\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          divider: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `From: ${msg.sender}`,\n            secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body2\",\n                color: \"textPrimary\",\n                children: msg.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 41\n              }, this), msg.imageHash && /*#__PURE__*/_jsxDEV(Box, {\n                mt: 2,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `https://gateway.pinata.cloud/ipfs/${msg.imageHash}`,\n                  alt: \"Attachment\",\n                  style: {\n                    maxWidth: '100%',\n                    height: 'auto',\n                    marginTop: '10px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Inbox, \"eVPFvhIuSHVZ6D0z29Vl0S1jFRs=\");\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useEffect","useState","List","ListItem","ListItemText","Typography","Card","CardContent","Box","getWeb3","getContract","jsxDEV","_jsxDEV","Fragment","_Fragment","Inbox","_s","messages","setMessages","status","setStatus","fetchMessages","web3","accounts","eth","getAccounts","contract","userMessageIds","methods","getUserMessages","call","userMessages","Promise","all","map","id","error","console","className","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","msg","index","divider","primary","sender","secondary","component","content","imageHash","mt","src","alt","style","maxWidth","height","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/bhija/Downloads/decentralized-mail/src/components/Inbox.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { List, ListItem, ListItemText, Typography, Card, CardContent, Box } from '@mui/material';\r\nimport { getWeb3, getContract } from '../utils/contract';\r\n\r\nconst Inbox = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [status, setStatus] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            const web3 = await getWeb3();\r\n            const accounts = await web3.eth.getAccounts();\r\n            const contract = await getContract(web3);\r\n\r\n            try {\r\n                const userMessageIds = await contract.methods.getUserMessages(accounts[0]).call();\r\n                const userMessages = await Promise.all(\r\n                    userMessageIds.map(id => contract.methods.messages(id).call())\r\n                );\r\n                setMessages(userMessages);\r\n                setStatus('');\r\n            } catch (error) {\r\n                console.error('Error fetching messages:', error);\r\n                setStatus('Failed to fetch messages');\r\n            }\r\n        };\r\n\r\n        fetchMessages();\r\n    }, []);\r\n\r\n    return (\r\n        <Card className=\"Card\">\r\n            <CardContent>\r\n                <Typography variant=\"h5\" gutterBottom>Inbox</Typography>\r\n                {status && (\r\n                    <Typography variant=\"body2\" color=\"error\" gutterBottom>\r\n                        {status}\r\n                    </Typography>\r\n                )}\r\n                <List>\r\n                    {messages.map((msg, index) => (\r\n                        <ListItem key={index} divider>\r\n                            <ListItemText\r\n                                primary={`From: ${msg.sender}`}\r\n                                secondary={\r\n                                    <>\r\n                                        <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\r\n                                            {msg.content}\r\n                                        </Typography>\r\n                                        {msg.imageHash && (\r\n                                            <Box mt={2}>\r\n                                                <img\r\n                                                    src={`https://gateway.pinata.cloud/ipfs/${msg.imageHash}`}\r\n                                                    alt=\"Attachment\"\r\n                                                    style={{ maxWidth: '100%', height: 'auto', marginTop: '10px' }}\r\n                                                />\r\n                                            </Box>\r\n                                        )}\r\n                                    </>\r\n                                }\r\n                            />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Inbox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}