{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhija\\\\Downloads\\\\decentralized-mail\\\\src\\\\components\\\\SendMessage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getWeb3, getContract } from '../utils/contract';\nimport { TextField, Button, Card, CardContent, Typography, IconButton } from '@mui/material';\nimport { AttachFile } from '@mui/icons-material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendMessage = () => {\n  _s();\n  const [recipient, setRecipient] = useState('');\n  const [message, setMessage] = useState('');\n  const [image, setImage] = useState(null);\n  const [status, setStatus] = useState('');\n  const handleImageUpload = async e => {\n    const file = e.target.files[0];\n    setImage(file);\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('https://api.pinata.cloud/pinning/pinFileToIPFS', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'pinata_api_key': process.env.REACT_APP_PINATA_API_KEY,\n          'pinata_secret_api_key': process.env.REACT_APP_PINATA_SECRET_API_KEY\n        }\n      });\n      const imageHash = response.data.IpfsHash;\n      setStatus(`Image uploaded: ${imageHash}`);\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setStatus('Failed to upload image');\n    }\n  };\n  const sendMessage = async () => {\n    const web3 = await getWeb3();\n    const accounts = await web3.eth.getAccounts();\n    const contract = await getContract(web3);\n    try {\n      let content = message;\n      if (image) {\n        const formData = new FormData();\n        formData.append('file', image);\n        const response = await axios.post('https://api.pinata.cloud/pinning/pinFileToIPFS', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'pinata_api_key': process.env.REACT_APP_PINATA_API_KEY,\n            'pinata_secret_api_key': process.env.REACT_APP_PINATA_SECRET_API_KEY\n          }\n        });\n        const imageHash = response.data.IpfsHash;\n        content += `\\nImage: https://gateway.pinata.cloud/ipfs/${imageHash}`;\n      }\n      await contract.methods.sendMessage(recipient, content).send({\n        from: accounts[0]\n      });\n      setStatus('Message sent successfully!');\n    } catch (error) {\n      console.error(error);\n      setStatus('Failed to send message');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"Card\",\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Recipient Address\",\n          variant: \"outlined\",\n          value: recipient,\n          onChange: e => setRecipient(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Message\",\n          variant: \"outlined\",\n          multiline: true,\n          rows: 4,\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \"image/*\",\n          id: \"icon-button-file\",\n          type: \"file\",\n          style: {\n            display: 'none'\n          },\n          onChange: handleImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"icon-button-file\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            \"aria-label\": \"upload picture\",\n            component: \"span\",\n            children: /*#__PURE__*/_jsxDEV(AttachFile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: status.includes('Failed') ? 'error' : 'status',\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(SendMessage, \"zbILxQLDkmlpG68EEuaUFBIiM8c=\");\n_c = SendMessage;\nexport default SendMessage;\nvar _c;\n$RefreshReg$(_c, \"SendMessage\");","map":{"version":3,"names":["React","useState","getWeb3","getContract","TextField","Button","Card","CardContent","Typography","IconButton","AttachFile","axios","jsxDEV","_jsxDEV","SendMessage","_s","recipient","setRecipient","message","setMessage","image","setImage","status","setStatus","handleImageUpload","e","file","target","files","formData","FormData","append","response","post","headers","process","env","REACT_APP_PINATA_API_KEY","REACT_APP_PINATA_SECRET_API_KEY","imageHash","data","IpfsHash","error","console","sendMessage","web3","accounts","eth","getAccounts","contract","content","methods","send","from","className","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","multiline","rows","accept","id","type","style","display","htmlFor","color","component","onClick","includes","_c","$RefreshReg$"],"sources":["C:/Users/bhija/Downloads/decentralized-mail/src/components/SendMessage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { getWeb3, getContract } from '../utils/contract';\r\nimport { TextField, Button, Card, CardContent, Typography, IconButton } from '@mui/material';\r\nimport { AttachFile } from '@mui/icons-material';\r\nimport axios from 'axios';\r\n\r\nconst SendMessage = () => {\r\n    const [recipient, setRecipient] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [image, setImage] = useState(null);\r\n    const [status, setStatus] = useState('');\r\n\r\n    const handleImageUpload = async (e) => {\r\n        const file = e.target.files[0];\r\n        setImage(file);\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            const response = await axios.post('https://api.pinata.cloud/pinning/pinFileToIPFS', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'pinata_api_key': process.env.REACT_APP_PINATA_API_KEY,\r\n                    'pinata_secret_api_key': process.env.REACT_APP_PINATA_SECRET_API_KEY\r\n                }\r\n            });\r\n\r\n            const imageHash = response.data.IpfsHash;\r\n            setStatus(`Image uploaded: ${imageHash}`);\r\n        } catch (error) {\r\n            console.error('Error uploading image:', error);\r\n            setStatus('Failed to upload image');\r\n        }\r\n    };\r\n\r\n    const sendMessage = async () => {\r\n        const web3 = await getWeb3();\r\n        const accounts = await web3.eth.getAccounts();\r\n        const contract = await getContract(web3);\r\n\r\n        try {\r\n            let content = message;\r\n            if (image) {\r\n                const formData = new FormData();\r\n                formData.append('file', image);\r\n\r\n                const response = await axios.post('https://api.pinata.cloud/pinning/pinFileToIPFS', formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                        'pinata_api_key': process.env.REACT_APP_PINATA_API_KEY,\r\n                        'pinata_secret_api_key': process.env.REACT_APP_PINATA_SECRET_API_KEY\r\n                    }\r\n                });\r\n\r\n                const imageHash = response.data.IpfsHash;\r\n                content += `\\nImage: https://gateway.pinata.cloud/ipfs/${imageHash}`;\r\n            }\r\n\r\n            await contract.methods.sendMessage(recipient, content).send({ from: accounts[0] });\r\n            setStatus('Message sent successfully!');\r\n        } catch (error) {\r\n            console.error(error);\r\n            setStatus('Failed to send message');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card className=\"Card\">\r\n            <CardContent>\r\n                <Typography variant=\"h5\" gutterBottom>Send Message</Typography>\r\n                <form>\r\n                    <TextField\r\n                        label=\"Recipient Address\"\r\n                        variant=\"outlined\"\r\n                        value={recipient}\r\n                        onChange={(e) => setRecipient(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        label=\"Message\"\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows={4}\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                    />\r\n                    <input\r\n                        accept=\"image/*\"\r\n                        id=\"icon-button-file\"\r\n                        type=\"file\"\r\n                        style={{ display: 'none' }}\r\n                        onChange={handleImageUpload}\r\n                    />\r\n                    <label htmlFor=\"icon-button-file\">\r\n                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                            <AttachFile />\r\n                        </IconButton>\r\n                    </label>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={sendMessage}>\r\n                        Send\r\n                    </Button>\r\n                </form>\r\n                <p className={status.includes('Failed') ? 'error' : 'status'}>{status}</p>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SendMessage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}